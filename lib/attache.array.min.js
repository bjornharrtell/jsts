// The author disclaims copyright to this code.

(function(){"use strict";function ui32(n){n=isFinite(n)?Math.floor(n):0;return n>=0?n:0;}function canCall(fn){if(typeof fn!=='function'){throw new TypeError(fn+" is not a function");}}function reduce(args,reverse){var fn=args[0],acc,i=0,a=Object(this),ln=ui32(a.length),more,next;if(this==null)throw new TypeError("missing this argument");canCall(fn);if(ln===0&&args.length<2)throw new TypeError("can't reduce empty array without accumulator");if(reverse){more=function(){return i>=0};next=function(){return i--};i=ln-1;}else{more=function(){return i<ln};next=function(){return i++};}if(args.length>=2){acc=args[1];}else{var found=false;while(!found&&more()){found=(i in a);if(found)acc=a[i];next();}if(!found)throw new TypeError("can't find an element to initialize accumulator");}while(more()){if(i in a){acc=fn.call(undefined,acc,a[i],i,a);}next();}return acc;}var std={indexOf:function(value){var a=Object(this),ln=ui32(a.length),s=parseInt(arguments[1])||0,i;if(ln===0)return-1;if(s>ln)return-1;if(s<0){s=ln+s;if(s<0)s=0;}for(i=s;i<ln;i++){if(i in a){if(value===a[i])return i;}}return-1;},lastIndexOf:function(value){var a=Object(this),ln=ui32(a.length),s=parseInt(arguments[1]),i;if(ln===0)return-1;if(s!==0&&!s)s=ln;if(s>=0){if(s>=ln)ln-1;}else{s=ln+s;}for(i=s;i>=0;i--){if(i in a){if(value===a[i])return i;}}return-1;},every:function(fn){var a=Object(this),ln=ui32(a.length),scope=arguments[1],i;for(i=0;i<ln;i++){if(i in a){if(!fn.call(scope,a[i],i,a))return false;}}return true;},some:function(fn){canCall(fn);return!std.every.call(this,function(){return!fn.apply(this,arguments);},arguments[1]);},forEach:function(fn){canCall(fn);var a=Object(this),ln=ui32(a.length),scope=arguments[1],i;for(i=0;i<ln;i++){if(i in a){fn.call(scope,a[i],i,a);}}},filter:function(fn){canCall(fn);var ret=[];std.forEach.call(this,function(value){if(fn.apply(this,arguments))ret.push(value);},arguments[1]);return ret;},map:function(fn){canCall(fn);var ret=[];std.forEach.call(this,function(value){ret.push(fn.apply(this,arguments));},arguments[1]);return ret;},reduce:function(fn){return reduce.call(this,arguments,false);},reduceRight:function(fn){return reduce.call(this,arguments,true);}};var ap=Array.prototype;for(var key in std)if(!(key in ap))ap[key]=std[key];function ns(b,n){return n in b?b[n]:b[n]={};}ns(ns(window,'attache'),'array').standard=std;})();
